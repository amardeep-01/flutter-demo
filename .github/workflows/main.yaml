
name: Engage-Ui-CICD

on:
  push:
    branches:
      - '**'
    tags: 
      - 'dev_v*' 
      - 'uat_v*'  
      - 'qa_v*'
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Select Environment
        options:
          - DEV
          - QA
          - UAT

jobs:
  build-and-test:
    if: github.event_name != 'workflow_dispatch' && !startsWith(github.ref, 'refs/tags/')
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2


      - name: Install dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze

      - name: Run tests
        run: flutter test

      - name: Build APK
        run: flutter build apk

        
  deploymentjob:
         name: Deployment Job
         if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
         runs-on: self-hosted
         steps:
           - name: Checkout Repository
             uses: actions/checkout@v2
            
           - name: Determine Environment
             id: env
             if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
             run: |
              Write-Output "Event Name: $env:GITHUB_EVENT_NAME"
              Write-Output "Ref: $env:GITHUB_REF"
              if ($env:GITHUB_EVENT_NAME -eq 'workflow_dispatch') {
                Write-Output "::set-output name=env::${{ github.event.inputs.environment }}"
              } elseif ($env:GITHUB_REF -match '^refs/tags/') {
                $TAG = $env:GITHUB_REF
                Write-Output "Tag: $TAG"
                if ($TAG -match '^refs/tags/dev_v*') {
                  $ENV = "DEV"
                  Write-Output "::set-output name=env::$ENV"
                } elseif ($TAG -match '^refs/tags/uat_v*') {
                  $ENV = "UAT"
                  Write-Output "Environment: $ENV"
                  Write-Output "::set-output name=env::$ENV"
                } elseif ($TAG -match '^refs/tags/qa_v*') {
                  $ENV = "QA"
                  Write-Output "::set-output name=env::$ENV"
                }
              }
    
              Write-Output "ENV: $ENV"
    
           - name: Stop running Java process
             run: |
              
           - name: Building
             run: |
            
           - name: restarting powershell
             run: |
